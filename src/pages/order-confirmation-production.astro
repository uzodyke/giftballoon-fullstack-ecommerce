---
import BaseLayout from '@/layouts/BaseLayout.astro';

const confirmationSchema = {
  "@context": "https://schema.org",
  "@type": "WebPage",
  "name": "Order Confirmation - Gifted Balloon",
  "description": "Your balloon order has been confirmed",
  "url": "https://giftedballoon.com/order-confirmation"
};
---

<BaseLayout
  title="Order Confirmed! | Thank You | Gifted Balloon"
  description="Your personalised balloon order has been confirmed. Thank you for choosing Gifted Balloon for your special occasion."
  ogImage="/images/5_Love_bouquet_30.png"
  schema={confirmationSchema}
  keywords="order confirmation, balloon order confirmed, thank you"
>
  <!-- Success Page -->
  <section class="py-16 bg-gradient-to-br from-green-50 via-blue-50 to-purple-50 min-h-screen">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">

      <!-- Success Animation -->
      <div class="mb-8">
        <div class="inline-flex items-center justify-center w-24 h-24 bg-green-100 rounded-full mb-6">
          <svg class="w-12 h-12 text-green-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
        </div>
        <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
          üéâ Order Confirmed!
        </h1>
        <p class="text-xl text-gray-700 mb-8">
          Thank you for your order! Your personalised balloons are being prepared.
        </p>
      </div>

      <!-- Order Details -->
      <div class="bg-white rounded-2xl p-8 shadow-xl mb-8 text-left">
        <h2 class="text-2xl font-bold text-gray-900 mb-6 text-center">Order Details</h2>

        <div id="orderDetails" class="space-y-6">
          <!-- Order details will be loaded here -->
        </div>

        <div class="mt-8 p-6 bg-green-50 rounded-lg border border-green-200">
          <h3 class="text-lg font-semibold text-green-800 mb-2">What happens next?</h3>
          <ul class="space-y-2 text-green-700">
            <li class="flex items-center">
              <span class="text-green-500 mr-2">‚úì</span>
              You'll receive an email confirmation shortly
            </li>
            <li class="flex items-center">
              <span class="text-green-500 mr-2">‚úì</span>
              Our team will prepare your personalised balloons
            </li>
            <li class="flex items-center">
              <span class="text-green-500 mr-2">‚úì</span>
              We'll deliver on your chosen date
            </li>
            <li class="flex items-center">
              <span class="text-green-500 mr-2">‚úì</span>
              Any questions? Contact us anytime
            </li>
          </ul>
        </div>
      </div>

      <!-- Action Buttons -->
      <div class="space-y-4 mb-12">
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a
            href="./shop-production/"
            class="bg-primary-500 hover:bg-primary-600 text-white px-8 py-3 rounded-lg font-semibold transition-colors"
          >
            üõçÔ∏è Continue Shopping
          </a>
          <button
            onclick="printOrder()"
            class="bg-gray-500 hover:bg-gray-600 text-white px-8 py-3 rounded-lg font-semibold transition-colors"
          >
            üñ®Ô∏è Print Order
          </button>
        </div>
      </div>

      <!-- Contact Information -->
      <div class="bg-white rounded-2xl p-8 shadow-xl">
        <h2 class="text-2xl font-bold text-gray-900 mb-6">Need Help?</h2>
        <p class="text-gray-600 mb-6">
          Our customer service team is here to help with any questions about your order.
        </p>

        <div class="grid md:grid-cols-2 gap-6">
          <div class="text-center">
            <div class="bg-green-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
              <span class="text-2xl">üìû</span>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Call Us</h3>
            <a
              href="tel:+447459665002"
              class="text-primary-600 hover:text-primary-700 font-semibold"
            >
              +44 7459 665002
            </a>
            <p class="text-sm text-gray-600 mt-1">Mon-Fri 9AM-6PM</p>
          </div>

          <div class="text-center">
            <div class="bg-blue-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4">
              <span class="text-2xl">üìß</span>
            </div>
            <h3 class="text-lg font-semibold text-gray-900 mb-2">Email Us</h3>
            <a
              href="mailto:info@giftedballoon.com"
              class="text-primary-600 hover:text-primary-700 font-semibold"
            >
              info@giftedballoon.com
            </a>
            <p class="text-sm text-gray-600 mt-1">We'll respond within 24 hours</p>
          </div>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<script is:inline>
// Initialize when DOM is ready
function initializeConfirmation() {
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setupConfirmation);
  } else {
    setupConfirmation();
  }
}

function setupConfirmation() {
  console.log('Order confirmation page loaded');
  loadOrderDetails();
  // Clear cart after successful order
  localStorage.removeItem('giftballoon_cart');
  localStorage.removeItem('pendingOrder');
}

function loadOrderDetails() {
  try {
    // Get order ID from URL parameters
    var urlParams = new URLSearchParams(window.location.search);
    var orderId = urlParams.get('order_id') || urlParams.get('session_id');

    // Try to load order data from localStorage
    var orderData = null;

    if (orderId) {
      var storedOrder = localStorage.getItem('order_' + orderId);
      if (storedOrder) {
        orderData = JSON.parse(storedOrder);
      }
    }

    // Fallback to pendingOrder if no specific order found
    if (!orderData) {
      var pendingOrder = localStorage.getItem('pendingOrder');
      if (pendingOrder) {
        orderData = JSON.parse(pendingOrder);
      }
    }

    // Display order details
    if (orderData) {
      displayOrderDetails(orderData);
    } else {
      displayDefaultConfirmation();
    }

  } catch (error) {
    console.error('Error loading order details:', error);
    displayDefaultConfirmation();
  }
}

function displayOrderDetails(orderData) {
  var detailsContainer = document.getElementById('orderDetails');

  var orderDate = new Date(orderData.created_at || Date.now()).toLocaleDateString('en-GB', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });

  var orderDetailsHTML = '<div class="grid md:grid-cols-2 gap-6">';

  // Order Information
  orderDetailsHTML += '<div>';
  orderDetailsHTML += '<h3 class="text-lg font-semibold text-gray-900 mb-3">Order Information</h3>';
  orderDetailsHTML += '<div class="space-y-2 text-sm">';
  orderDetailsHTML += '<p><span class="font-semibold">Order ID:</span> ' + orderData.id + '</p>';
  orderDetailsHTML += '<p><span class="font-semibold">Order Date:</span> ' + orderDate + '</p>';
  orderDetailsHTML += '<p><span class="font-semibold">Payment Method:</span> ' + getPaymentMethodName(orderData.payment_method) + '</p>';
  orderDetailsHTML += '<p><span class="font-semibold">Total Amount:</span> ¬£' + (orderData.total_amount || 0).toFixed(2) + '</p>';
  orderDetailsHTML += '</div>';
  orderDetailsHTML += '</div>';

  // Customer Details
  orderDetailsHTML += '<div>';
  orderDetailsHTML += '<h3 class="text-lg font-semibold text-gray-900 mb-3">Customer Details</h3>';
  orderDetailsHTML += '<div class="space-y-2 text-sm">';
  orderDetailsHTML += '<p><span class="font-semibold">Name:</span> ' + (orderData.customer_name || 'N/A') + '</p>';
  orderDetailsHTML += '<p><span class="font-semibold">Email:</span> ' + (orderData.customer_email || 'N/A') + '</p>';
  orderDetailsHTML += '<p><span class="font-semibold">Phone:</span> ' + (orderData.customer_phone || 'N/A') + '</p>';
  orderDetailsHTML += '<p><span class="font-semibold">Delivery Address:</span><br>' + formatAddress(orderData.delivery_address) + '</p>';
  orderDetailsHTML += '</div>';
  orderDetailsHTML += '</div>';

  orderDetailsHTML += '</div>';

  // Order Items
  orderDetailsHTML += '<div class="mt-6">';
  orderDetailsHTML += '<h3 class="text-lg font-semibold text-gray-900 mb-3">Order Items</h3>';
  orderDetailsHTML += '<div class="space-y-3">';

  if (orderData.items && orderData.items.length > 0) {
    for (var i = 0; i < orderData.items.length; i++) {
      var item = orderData.items[i];
      orderDetailsHTML += '<div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">';
      orderDetailsHTML += '<div class="flex items-center space-x-3">';
      orderDetailsHTML += '<img src="' + (item.image || './images/placeholder.png') + '" alt="' + item.name + '" class="w-12 h-12 object-contain rounded" onerror="this.src=\'./images/placeholder.png\'" />';
      orderDetailsHTML += '<div>';
      orderDetailsHTML += '<h4 class="font-semibold text-gray-900">' + item.name + '</h4>';
      orderDetailsHTML += '<p class="text-sm text-gray-600">Quantity: ' + (item.quantity || 1) + '</p>';
      if (item.customization && item.customization.customName) {
        orderDetailsHTML += '<p class="text-sm text-gray-600">Custom Text: "' + item.customization.customName + '"</p>';
      }
      if (item.customization && item.customization.occasionType) {
        orderDetailsHTML += '<p class="text-sm text-gray-600">Occasion: ' + item.customization.occasionType + '</p>';
      }
      orderDetailsHTML += '</div>';
      orderDetailsHTML += '</div>';
      orderDetailsHTML += '<span class="font-bold text-primary-600">¬£' + ((item.price || 0) * (item.quantity || 1)).toFixed(2) + '</span>';
      orderDetailsHTML += '</div>';
    }
  } else {
    orderDetailsHTML += '<p class="text-gray-600">No items found</p>';
  }

  orderDetailsHTML += '</div>';

  // Total
  orderDetailsHTML += '<div class="mt-4 p-4 bg-gray-50 rounded-lg">';
  orderDetailsHTML += '<div class="flex justify-between items-center">';
  orderDetailsHTML += '<span class="text-lg font-semibold">Total:</span>';
  orderDetailsHTML += '<span class="text-xl font-bold text-primary-600">¬£' + (orderData.total_amount || 0).toFixed(2) + '</span>';
  orderDetailsHTML += '</div>';
  orderDetailsHTML += '</div>';

  orderDetailsHTML += '</div>';

  detailsContainer.innerHTML = orderDetailsHTML;
}

function displayDefaultConfirmation() {
  var detailsContainer = document.getElementById('orderDetails');

  detailsContainer.innerHTML = '<div class="text-center py-8"><p class="text-lg text-gray-700 mb-4">Your order has been successfully placed and is being processed.</p><p class="text-gray-600">You should receive an email confirmation shortly with your order details.</p></div>';
}

function getPaymentMethodName(method) {
  var methods = {
    'stripe_card': 'Credit/Debit Card',
    'express_checkout': 'Express Checkout',
    'paypal': 'PayPal',
    'apple_pay': 'Apple Pay',
    'google_pay': 'Google Pay'
  };
  return methods[method] || 'Online Payment';
}

function formatAddress(address) {
  if (!address) return 'Address not provided';

  var parts = [
    address.line1,
    address.city,
    address.county,
    address.postal_code,
    address.country
  ].filter(function(part) {
    return part && part.trim() !== '';
  });

  return parts.join(', ');
}

function printOrder() {
  window.print();
}

// Initialize when script loads
initializeConfirmation();
</script>
</BaseLayout>