---
import BaseLayout from '@/layouts/BaseLayout.astro';
import Breadcrumb from '@/components/Breadcrumb.astro';

const breadcrumbItems = [
  { label: 'Home', href: '/' },
  { label: 'Shop', href: '/shop' },
  { label: 'Checkout' }
];

// Simple checkout page schema
const checkoutSchema = {
  "@context": "https://schema.org",
  "@type": "WebPage",
  "name": "Checkout - Personalised Balloons",
  "description": "Complete your personalised balloon order with secure payment",
  "url": "https://giftedballoon.com/checkout"
};
---

<BaseLayout
  title="Checkout | Complete Your Balloon Order | Gifted Balloon"
  description="Complete your personalised balloon order with secure payment. Fast checkout with multiple payment options available."
  ogImage="/images/5. Love bouquet_¬£30.png"
  schema={checkoutSchema}
  keywords="balloon checkout, secure payment, personalised balloon order, complete purchase"
>
  <!-- Breadcrumb -->
  <Breadcrumb items={breadcrumbItems} />

  <!-- Checkout Page -->
  <section class="py-16 bg-gradient-to-br from-pink-50 via-purple-50 to-pink-100 min-h-screen">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="bg-white rounded-2xl p-8 shadow-xl">
        <h1 class="text-3xl font-bold text-gray-900 mb-8 text-center">Complete Your Order</h1>

        <!-- Order Summary -->
        <div class="bg-gray-50 rounded-lg p-6 mb-8">
          <h2 class="text-xl font-bold text-gray-900 mb-4">Order Summary</h2>
          <div id="orderSummary" class="space-y-4">
            <!-- Items will be loaded here -->
          </div>
          <div class="border-t border-gray-200 pt-4 mt-4">
            <div class="flex justify-between text-lg font-bold text-primary-600">
              <span>Total:</span>
              <span id="grandTotal">¬£0.00</span>
            </div>
          </div>
        </div>

        <!-- Customer Information Form -->
        <form id="checkoutForm" class="space-y-6 mb-8">
          <div class="grid md:grid-cols-2 gap-6">
            <div>
              <label for="firstName" class="block text-sm font-semibold text-gray-900 mb-2">
                First Name <span class="text-red-500">*</span>
              </label>
              <input
                type="text"
                id="firstName"
                name="firstName"
                required
                class="w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
                placeholder="Enter your first name"
              />
            </div>
            <div>
              <label for="lastName" class="block text-sm font-semibold text-gray-900 mb-2">
                Last Name <span class="text-red-500">*</span>
              </label>
              <input
                type="text"
                id="lastName"
                name="lastName"
                required
                class="w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
                placeholder="Enter your last name"
              />
            </div>
          </div>

          <div>
            <label for="email" class="block text-sm font-semibold text-gray-900 mb-2">
              Email Address <span class="text-red-500">*</span>
            </label>
            <input
              type="email"
              id="email"
              name="email"
              required
              class="w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
              placeholder="your.email@example.com"
            />
          </div>

          <div>
            <label for="phone" class="block text-sm font-semibold text-gray-900 mb-2">
              Phone Number <span class="text-red-500">*</span>
            </label>
            <input
              type="tel"
              id="phone"
              name="phone"
              required
              class="w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
              placeholder="+44 7xxx xxx xxx"
            />
          </div>

          <div>
            <label for="address" class="block text-sm font-semibold text-gray-900 mb-2">
              Delivery Address <span class="text-red-500">*</span>
            </label>
            <input
              type="text"
              id="address"
              name="address"
              required
              class="w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
              placeholder="Street address, apartment, suite, etc."
            />
          </div>

          <div class="grid md:grid-cols-3 gap-6">
            <div>
              <label for="city" class="block text-sm font-semibold text-gray-900 mb-2">
                City <span class="text-red-500">*</span>
              </label>
              <input
                type="text"
                id="city"
                name="city"
                required
                class="w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
                placeholder="London"
              />
            </div>
            <div>
              <label for="county" class="block text-sm font-semibold text-gray-900 mb-2">
                County/State
              </label>
              <input
                type="text"
                id="county"
                name="county"
                class="w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
                placeholder="Greater London"
              />
            </div>
            <div>
              <label for="postcode" class="block text-sm font-semibold text-gray-900 mb-2">
                Postcode <span class="text-red-500">*</span>
              </label>
              <input
                type="text"
                id="postcode"
                name="postcode"
                required
                class="w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
                placeholder="SW1A 1AA"
              />
            </div>
          </div>

          <div>
            <label for="deliveryNotes" class="block text-sm font-semibold text-gray-900 mb-2">
              Delivery Notes (Optional)
            </label>
            <textarea
              id="deliveryNotes"
              name="deliveryNotes"
              rows="3"
              class="w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
              placeholder="Special delivery instructions..."
            ></textarea>
          </div>
        </form>

        <!-- Secure Payment Button -->
        <div class="text-center">
          <button
            id="secureCheckoutBtn"
            class="w-full bg-gradient-to-r from-primary-500 to-primary-600 hover:from-primary-600 hover:to-primary-700 text-white py-4 rounded-lg font-bold text-lg transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-1 mb-4"
          >
            üîí Secure Checkout with Stripe
          </button>

          <div class="flex items-center justify-center space-x-4 text-sm text-gray-600 mb-6">
            <div class="flex items-center">
              <span class="text-green-500 mr-1">üîí</span>
              <span>SSL Secure</span>
            </div>
            <div class="flex items-center">
              <span class="text-blue-500 mr-1">üí≥</span>
              <span>All Cards Accepted</span>
            </div>
            <div class="flex items-center">
              <span class="text-purple-500 mr-1">üçé</span>
              <span>Apple Pay & Google Pay</span>
            </div>
          </div>

          <p class="text-sm text-gray-600 mb-4">
            You'll be redirected to our secure payment partner Stripe to complete your purchase safely.
          </p>

          <!-- Error Messages -->
          <div id="errorMessage" class="hidden bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-lg mb-4"></div>
        </div>

        <!-- Alternative Contact -->
        <div class="text-center pt-6 border-t border-gray-200">
          <p class="text-gray-600 mb-4">Need help with your order?</p>
          <div class="flex justify-center space-x-4">
            <a
              href="tel:+447459665002"
              class="bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded-lg font-semibold transition-colors"
            >
              üìû Call +44 7459 665002
            </a>
            <a
              href="mailto:info@giftedballoon.com"
              class="bg-blue-500 hover:bg-blue-600 text-white px-6 py-2 rounded-lg font-semibold transition-colors"
            >
              üìß Email Us
            </a>
          </div>
        </div>
      </div>
    </div>
  </section>
</BaseLayout>

<!-- Stripe.js Library -->
<script src="https://js.stripe.com/v3/"></script>

<script>
  // Initialize Stripe with your public key
  const stripe = Stripe('pk_live_51SKpFv3aMX7zUeKo8mV5qhPkf5J0BNO2n3clWZHrghRZYfs2DVibiKAObQpPhDckSM2EwjvZBZIY4keWr4z0lMI700lEg3qheC');

  let cart = [];
  let currentTotal = 0;

  document.addEventListener('DOMContentLoaded', function() {
    loadOrderData();
    setupEventListeners();
  });

  function loadOrderData() {
    // Load cart items from localStorage
    const cartData = localStorage.getItem('giftballoon_cart');
    if (cartData) {
      const storedCart = JSON.parse(cartData);
      cart = storedCart.map(item => ({
        id: item.productId || item.id,
        name: item.name,
        price: item.price,
        quantity: item.quantity,
        image: item.image,
        customization: item.customization || {}
      }));
    }

    displayOrderSummary();
    calculateTotal();
  }

  function displayOrderSummary() {
    const summaryContainer = document.getElementById('orderSummary');

    if (!cart || cart.length === 0) {
      summaryContainer.innerHTML = `
        <div class="text-center py-8">
          <p class="text-gray-500 mb-4">No items in your cart</p>
          <a href="/shop" class="text-primary-600 hover:text-primary-700 font-semibold">
            ‚Üê Continue Shopping
          </a>
        </div>
      `;
      return;
    }

    summaryContainer.innerHTML = cart.map(item => `
      <div class="flex items-center justify-between p-3 bg-white rounded-lg border">
        <div class="flex items-center space-x-3">
          <img
            src="${item.image}"
            alt="${item.name}"
            class="w-12 h-12 object-contain rounded"
          />
          <div>
            <h4 class="font-semibold text-gray-900">${item.name}</h4>
            <p class="text-sm text-gray-600">Qty: ${item.quantity || 1}</p>
            <p class="text-sm text-gray-600">Custom: ${item.customization?.customName || 'None'}</p>
          </div>
        </div>
        <span class="font-bold text-primary-600">¬£${((item.price || 0) * (item.quantity || 1)).toFixed(2)}</span>
      </div>
    `).join('');
  }

  function calculateTotal() {
    const subtotal = cart.reduce((sum, item) => {
      return sum + (item.price || 0) * (item.quantity || 1);
    }, 0);

    const deliveryFee = subtotal >= 50 ? 0 : 5.99;
    currentTotal = subtotal + deliveryFee;

    document.getElementById('grandTotal').textContent = `¬£${currentTotal.toFixed(2)}`;
  }

  function setupEventListeners() {
    document.getElementById('secureCheckoutBtn').addEventListener('click', handleSecureCheckout);
  }

  async function handleSecureCheckout() {
    // Validate form
    const form = document.getElementById('checkoutForm');
    if (!form.checkValidity()) {
      form.reportValidity();
      return;
    }

    // Get customer data
    const customerData = {
      firstName: document.getElementById('firstName').value,
      lastName: document.getElementById('lastName').value,
      email: document.getElementById('email').value,
      phone: document.getElementById('phone').value,
      address: document.getElementById('address').value,
      city: document.getElementById('city').value,
      county: document.getElementById('county').value,
      postcode: document.getElementById('postcode').value,
      deliveryNotes: document.getElementById('deliveryNotes').value
    };

    if (cart.length === 0) {
      showError('Your cart is empty. Please add items before checkout.');
      return;
    }

    // Create order data
    const orderData = {
      id: 'GB-' + Date.now(),
      customer_name: `${customerData.firstName} ${customerData.lastName}`,
      customer_email: customerData.email,
      customer_phone: customerData.phone,
      delivery_address: {
        line1: customerData.address,
        city: customerData.city,
        county: customerData.county,
        postal_code: customerData.postcode,
        country: 'GB'
      },
      delivery_notes: customerData.deliveryNotes,
      items: cart,
      total_amount: currentTotal,
      created_at: new Date().toISOString()
    };

    // Store order data for confirmation page
    localStorage.setItem('pendingOrder', JSON.stringify(orderData));

    try {
      // Show loading state
      const btn = document.getElementById('secureCheckoutBtn');
      const originalText = btn.textContent;
      btn.textContent = 'Creating secure checkout...';
      btn.disabled = true;

      // Create Stripe Checkout Session
      await redirectToStripeCheckout(orderData);

    } catch (error) {
      console.error('Checkout failed:', error);
      showError('Something went wrong. Please try again or contact us for assistance.');

      // Reset button
      const btn = document.getElementById('secureCheckoutBtn');
      btn.textContent = 'üîí Secure Checkout with Stripe';
      btn.disabled = false;
    }
  }

  async function redirectToStripeCheckout(orderData) {
    // Create line items for Stripe
    const lineItems = orderData.items.map(item => ({
      price_data: {
        currency: 'gbp',
        product_data: {
          name: item.name,
          description: `Custom Text: ${item.customization?.customName || 'None'}`
        },
        unit_amount: Math.round((item.price || 0) * 100) // Convert to pence
      },
      quantity: item.quantity || 1
    }));

    // Add delivery fee if applicable
    const deliveryFee = orderData.total_amount >= 50 ? 0 : 5.99;
    if (deliveryFee > 0) {
      lineItems.push({
        price_data: {
          currency: 'gbp',
          product_data: {
            name: 'Delivery Fee',
            description: 'Standard UK delivery'
          },
          unit_amount: Math.round(deliveryFee * 100)
        },
        quantity: 1
      });
    }

    // For static hosting, we'll use a simple approach
    // In a real scenario, you'd want to create the checkout session on your backend
    const { error } = await stripe.redirectToCheckout({
      mode: 'payment',
      line_items: lineItems,
      success_url: `${window.location.origin}/order-confirmation?session_id={CHECKOUT_SESSION_ID}`,
      cancel_url: `${window.location.origin}/checkout`,
      customer_email: orderData.customer_email,
      metadata: {
        order_id: orderData.id,
        customer_name: orderData.customer_name,
        customer_phone: orderData.customer_phone
      }
    });

    if (error) {
      throw error;
    }
  }

  function showError(message) {
    const errorDiv = document.getElementById('errorMessage');
    errorDiv.textContent = message;
    errorDiv.classList.remove('hidden');
    setTimeout(() => {
      errorDiv.classList.add('hidden');
    }, 5000);
  }
</script>
</BaseLayout>