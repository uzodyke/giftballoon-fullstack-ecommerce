---
import BaseLayout from '@/layouts/BaseLayout.astro';
import Breadcrumb from '@/components/Breadcrumb.astro';

const breadcrumbItems = [
  { label: 'Home', href: '/' },
  { label: 'Shop' }
];

// Product data with web-safe image names
const products = [
  {
    id: 1,
    name: "Congratulations Balloon Bouquet",
    price: 25.00,
    image: "/images/1_Congratulations_balloon_bouquet_25.png",
    category: "Congratulations",
    description: "Perfect for celebrating achievements and milestones"
  },
  {
    id: 2,
    name: "Love Balloon Bouquet",
    price: 30.00,
    image: "/images/5_Love_bouquet_30.png",
    category: "Love & Romance",
    description: "Express your love with this romantic balloon arrangement"
  },
  {
    id: 3,
    name: "Birthday Balloon Bouquet",
    price: 28.00,
    image: "/images/3_Birthday_balloon_bouquet_28.png",
    category: "Birthday",
    description: "Make birthdays special with colorful balloon bouquets"
  },
  {
    id: 4,
    name: "Get Well Soon Balloons",
    price: 22.00,
    image: "/images/2_Get_well_soon_balloons_22.png",
    category: "Get Well",
    description: "Send wishes for a speedy recovery"
  },
  {
    id: 5,
    name: "Anniversary Balloon Bundle",
    price: 35.00,
    image: "/images/4_Anniversary_balloon_bundle_35.png",
    category: "Anniversary",
    description: "Celebrate years of love and commitment"
  },
  {
    id: 6,
    name: "Graduation Celebration Pack",
    price: 32.00,
    image: "/images/6_Graduation_celebration_pack_32.png",
    category: "Graduation",
    description: "Honor academic achievements in style"
  }
];

const shopSchema = {
  "@context": "https://schema.org",
  "@type": "WebPage",
  "name": "Shop Personalised Balloons",
  "description": "Browse our collection of personalised balloon bouquets for all occasions",
  "url": "https://giftedballoon.com/shop"
};
---

<BaseLayout
  title="Shop Personalised Balloons | Delivery Across UK | Gifted Balloon"
  description="Browse our beautiful collection of personalised balloon bouquets. Perfect for birthdays, anniversaries, congratulations, and more. Fast UK delivery available."
  ogImage="/images/5_Love_bouquet_30.png"
  schema={shopSchema}
  keywords="personalised balloons, balloon bouquets, birthday balloons, anniversary balloons, UK balloon delivery"
>
  <!-- Breadcrumb -->
  <Breadcrumb items={breadcrumbItems} />

  <!-- Shop Header -->
  <section class="py-16 bg-gradient-to-br from-pink-50 via-purple-50 to-pink-100">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
      <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
        Shop Personalised Balloons
      </h1>
      <p class="text-xl text-gray-700 mb-8 max-w-3xl mx-auto">
        Discover our beautiful collection of personalised balloon bouquets, perfect for every occasion and celebration.
      </p>
    </div>
  </section>

  <!-- Product Grid -->
  <section class="py-16 bg-white">
    <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">

      <!-- Filter Tabs -->
      <div class="flex flex-wrap justify-center gap-4 mb-12">
        <button
          class="filter-btn active bg-primary-500 text-white px-6 py-3 rounded-full font-semibold transition-all duration-200 hover:bg-primary-600"
          data-filter="all"
        >
          All Products
        </button>
        <button
          class="filter-btn bg-gray-200 text-gray-700 px-6 py-3 rounded-full font-semibold transition-all duration-200 hover:bg-primary-500 hover:text-white"
          data-filter="Birthday"
        >
          Birthday
        </button>
        <button
          class="filter-btn bg-gray-200 text-gray-700 px-6 py-3 rounded-full font-semibold transition-all duration-200 hover:bg-primary-500 hover:text-white"
          data-filter="Love & Romance"
        >
          Love & Romance
        </button>
        <button
          class="filter-btn bg-gray-200 text-gray-700 px-6 py-3 rounded-full font-semibold transition-all duration-200 hover:bg-primary-500 hover:text-white"
          data-filter="Congratulations"
        >
          Congratulations
        </button>
      </div>

      <!-- Products Grid -->
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {products.map((product) => (
          <div class="product-card bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-2xl transition-all duration-300 transform hover:-translate-y-2" data-category={product.category}>

            <!-- Product Image with Zoom -->
            <div class="relative group cursor-pointer image-container" data-image={product.image}>
              <img
                src={product.image}
                alt={product.name}
                class="w-full h-64 object-contain bg-gradient-to-br from-pink-50 to-purple-50 transition-transform duration-300 group-hover:scale-105"
                loading="lazy"
              />
              <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-20 transition-all duration-300 flex items-center justify-center">
                <div class="bg-white bg-opacity-90 text-gray-800 px-4 py-2 rounded-full opacity-0 group-hover:opacity-100 transition-all duration-300 transform translate-y-4 group-hover:translate-y-0">
                  üîç Click to zoom
                </div>
              </div>
            </div>

            <!-- Product Details -->
            <div class="p-6">
              <h3 class="text-xl font-bold text-gray-900 mb-2">{product.name}</h3>
              <p class="text-gray-600 mb-4">{product.description}</p>

              <div class="flex items-center justify-between mb-4">
                <span class="text-2xl font-bold text-primary-600">¬£{product.price.toFixed(2)}</span>
                <span class="bg-primary-100 text-primary-800 px-3 py-1 rounded-full text-sm font-semibold">
                  {product.category}
                </span>
              </div>

              <!-- Customization Form -->
              <form class="space-y-4 mb-6">
                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">
                    Custom Text (Optional)
                  </label>
                  <input
                    type="text"
                    class="custom-text w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
                    placeholder="Enter custom message..."
                    maxlength="50"
                  />
                </div>

                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">
                    Occasion
                  </label>
                  <select class="occasion-select w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200">
                    <option value="General">General</option>
                    <option value="Birthday">Birthday</option>
                    <option value="Anniversary">Anniversary</option>
                    <option value="Congratulations">Congratulations</option>
                    <option value="Get Well Soon">Get Well Soon</option>
                    <option value="Valentine's Day">Valentine's Day</option>
                    <option value="Graduation">Graduation</option>
                  </select>
                </div>

                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">
                    Delivery Date
                  </label>
                  <input
                    type="date"
                    class="delivery-date w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200"
                    min={new Date().toISOString().split('T')[0]}
                  />
                </div>

                <div>
                  <label class="block text-sm font-semibold text-gray-700 mb-2">
                    Quantity
                  </label>
                  <select class="quantity-select w-full p-3 border-2 border-gray-200 rounded-lg focus:border-primary-500 focus:ring-2 focus:ring-primary-200">
                    <option value="1">1</option>
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="5">5</option>
                  </select>
                </div>
              </form>

              <!-- Add to Cart Button -->
              <button
                class="add-to-cart-btn w-full bg-gradient-to-r from-primary-500 to-primary-600 hover:from-primary-600 hover:to-primary-700 text-white py-3 rounded-lg font-semibold transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-1"
                data-product-id={product.id}
                data-product-name={product.name}
                data-product-price={product.price}
                data-product-image={product.image}
              >
                Add to Cart
              </button>
            </div>
          </div>
        ))}
      </div>

      <!-- Cart Summary (Floating) -->
      <div id="cart-summary" class="fixed bottom-6 right-6 bg-white rounded-2xl shadow-2xl p-6 max-w-sm hidden z-50">
        <h3 class="text-lg font-bold text-gray-900 mb-4">Cart Summary</h3>
        <div id="cart-items" class="space-y-2 mb-4"></div>
        <div class="border-t border-gray-200 pt-4">
          <div class="flex justify-between items-center mb-4">
            <span class="font-semibold">Total:</span>
            <span id="cart-total" class="text-xl font-bold text-primary-600">¬£0.00</span>
          </div>
          <div class="space-y-2">
            <a
              href="/checkout-simple"
              class="block w-full bg-primary-500 hover:bg-primary-600 text-white text-center py-3 rounded-lg font-semibold transition-colors"
            >
              Secure Checkout
            </a>
            <button
              id="clear-cart"
              class="block w-full bg-gray-500 hover:bg-gray-600 text-white text-center py-2 rounded-lg font-semibold transition-colors"
            >
              Clear Cart
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- Image Zoom Modal -->
  <div id="zoom-modal" class="fixed inset-0 bg-black bg-opacity-75 hidden items-center justify-center z-50 p-4">
    <div class="relative max-w-4xl max-h-full">
      <button
        id="close-zoom"
        class="absolute top-4 right-4 bg-white bg-opacity-20 hover:bg-opacity-30 text-white text-2xl w-10 h-10 rounded-full flex items-center justify-center transition-all duration-200 z-10"
      >
        √ó
      </button>
      <img
        id="zoom-image"
        src=""
        alt="Product zoom"
        class="max-w-full max-h-full object-contain rounded-lg"
      />
    </div>
  </div>
</BaseLayout>

<script>
// Ensure this runs after DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
  console.log('Shop page loaded');

  // Cart functionality
  let cart = JSON.parse(localStorage.getItem('giftballoon_cart') || '[]');

  // Filter functionality
  const filterButtons = document.querySelectorAll('.filter-btn');
  const productCards = document.querySelectorAll('.product-card');

  filterButtons.forEach(button => {
    button.addEventListener('click', function() {
      const filter = this.getAttribute('data-filter');

      // Update active button
      filterButtons.forEach(btn => {
        btn.classList.remove('active', 'bg-primary-500', 'text-white');
        btn.classList.add('bg-gray-200', 'text-gray-700');
      });
      this.classList.add('active', 'bg-primary-500', 'text-white');
      this.classList.remove('bg-gray-200', 'text-gray-700');

      // Filter products
      productCards.forEach(card => {
        if (filter === 'all' || card.getAttribute('data-category') === filter) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    });
  });

  // Image zoom functionality
  const imageContainers = document.querySelectorAll('.image-container');
  const zoomModal = document.getElementById('zoom-modal');
  const zoomImage = document.getElementById('zoom-image');
  const closeZoom = document.getElementById('close-zoom');

  imageContainers.forEach(container => {
    container.addEventListener('click', function() {
      const imageSrc = this.getAttribute('data-image');
      zoomImage.src = imageSrc;
      zoomModal.classList.remove('hidden');
      zoomModal.classList.add('flex');
      document.body.style.overflow = 'hidden';
    });
  });

  closeZoom.addEventListener('click', function() {
    zoomModal.classList.add('hidden');
    zoomModal.classList.remove('flex');
    document.body.style.overflow = 'auto';
  });

  zoomModal.addEventListener('click', function(e) {
    if (e.target === zoomModal) {
      closeZoom.click();
    }
  });

  // Add to cart functionality
  const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');

  addToCartButtons.forEach(button => {
    button.addEventListener('click', function() {
      const productCard = this.closest('.product-card');
      const productData = {
        id: this.getAttribute('data-product-id'),
        name: this.getAttribute('data-product-name'),
        price: parseFloat(this.getAttribute('data-product-price')),
        image: this.getAttribute('data-product-image'),
        customization: {
          customName: productCard.querySelector('.custom-text').value || '',
          occasionType: productCard.querySelector('.occasion-select').value,
          deliveryDate: productCard.querySelector('.delivery-date').value || ''
        },
        quantity: parseInt(productCard.querySelector('.quantity-select').value),
        addedAt: new Date().toISOString()
      };

      // Check if product already exists in cart
      const existingIndex = cart.findIndex(item =>
        item.id === productData.id &&
        JSON.stringify(item.customization) === JSON.stringify(productData.customization)
      );

      if (existingIndex !== -1) {
        cart[existingIndex].quantity += productData.quantity;
      } else {
        cart.push(productData);
      }

      // Save to localStorage
      localStorage.setItem('giftballoon_cart', JSON.stringify(cart));

      // Update cart display
      updateCartSummary();

      // Show success message
      showAddToCartSuccess(this);
    });
  });

  // Cart summary functions
  function updateCartSummary() {
    const cartSummary = document.getElementById('cart-summary');
    const cartItems = document.getElementById('cart-items');
    const cartTotal = document.getElementById('cart-total');

    if (cart.length === 0) {
      cartSummary.classList.add('hidden');
      return;
    }

    cartSummary.classList.remove('hidden');

    // Update items
    cartItems.innerHTML = cart.map(item => `
      <div class="flex justify-between items-center text-sm">
        <span>${item.name} x${item.quantity}</span>
        <span>¬£${(item.price * item.quantity).toFixed(2)}</span>
      </div>
    `).join('');

    // Update total
    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    cartTotal.textContent = `¬£${total.toFixed(2)}`;
  }

  function showAddToCartSuccess(button) {
    const originalText = button.textContent;
    button.textContent = '‚úì Added to Cart!';
    button.style.backgroundColor = '#10b981';

    setTimeout(() => {
      button.textContent = originalText;
      button.style.backgroundColor = '';
    }, 2000);
  }

  // Clear cart functionality
  document.getElementById('clear-cart').addEventListener('click', function() {
    cart = [];
    localStorage.removeItem('giftballoon_cart');
    updateCartSummary();
  });

  // Initialize cart summary
  updateCartSummary();
});
</script>
</BaseLayout>