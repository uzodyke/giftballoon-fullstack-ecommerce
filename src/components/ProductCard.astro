---
import { Image } from 'astro:assets';
import type { Product } from '@/data/products';

export interface Props {
  product: Product;
  loading?: 'lazy' | 'eager';
  showFullImage?: boolean;
}

const { product, loading = 'lazy', showFullImage = true } = Astro.props;
---

<article class="product-card group bg-white rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transform hover:-translate-y-2 transition-all duration-300">
  <!-- Product Image Container - Fixed to show full image -->
  <div class={`relative overflow-hidden ${showFullImage ? 'aspect-square' : 'h-64'} bg-gradient-to-br from-pink-50 to-pink-100`}>
    <img
      src={product.image}
      alt={product.name}
      loading={loading}
      class={`w-full h-full ${showFullImage ? 'object-contain p-4' : 'object-cover'} group-hover:scale-105 transition-transform duration-300`}
      style={showFullImage ? 'border-radius: 12px;' : ''}
      width="400"
      height="400"
    />

    <!-- Price Badge -->
    <div class="absolute top-4 right-4 bg-primary-500 text-white px-3 py-1 rounded-full text-sm font-semibold shadow-lg">
      £{product.price.toFixed(2)}
    </div>

    <!-- Quick View Overlay -->
    <div class="absolute inset-0 bg-black bg-opacity-40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
      <button
        class="bg-white text-gray-900 px-6 py-3 rounded-lg font-semibold hover:bg-gray-100 transition-colors transform translate-y-4 group-hover:translate-y-0 duration-300 quick-view-btn zoom-trigger"
        data-product-name={product.name}
        data-product-image={product.image}
        data-product-description={product.description}
        data-product-price={product.price.toFixed(2)}
      >
        Quick View
      </button>
    </div>
  </div>

  <!-- Product Information -->
  <div class="p-6 space-y-4">
    <!-- Product Name -->
    <h3 class="text-xl font-bold text-gray-900 group-hover:text-primary-600 transition-colors duration-200">
      {product.name}
    </h3>

    <!-- Product Description -->
    <p class="text-gray-600 text-sm leading-relaxed line-clamp-2">
      {product.description}
    </p>

    <!-- Features -->
    <div class="flex flex-wrap gap-2">
      {product.features.slice(0, 2).map(feature => (
        <span class="bg-primary-50 text-primary-700 px-2 py-1 rounded-full text-xs font-medium">
          {feature}
        </span>
      ))}
      {product.features.length > 2 && (
        <span class="bg-gray-100 text-gray-600 px-2 py-1 rounded-full text-xs font-medium">
          +{product.features.length - 2} more
        </span>
      )}
    </div>

    <!-- Occasions -->
    <div class="text-xs text-gray-500">
      Perfect for: {product.occasions.slice(0, 2).join(', ')}
      {product.occasions.length > 2 && ' & more'}
    </div>

    <!-- Action Buttons -->
    <div class="flex gap-3 pt-4">
      <a
        href={`/shop?product=${product.id}`}
        class="flex-1 bg-primary-500 hover:bg-primary-600 text-white px-4 py-3 rounded-lg font-semibold text-center transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary-300"
        aria-label={`Customize ${product.name}`}
      >
        Customize Now
      </a>
      <button
        class="px-4 py-3 border-2 border-primary-500 text-primary-500 hover:bg-primary-500 hover:text-white rounded-lg font-semibold transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-primary-300"
        aria-label={`Add ${product.name} to wishlist`}
      >
        ♡
      </button>
    </div>
  </div>

  <!-- Schema.org Product Markup -->
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "Product",
    "name": product.name,
    "description": product.description,
    "image": `https://giftedballoon.com${product.image}`,
    "category": "Personalised Balloons",
    "brand": {
      "@type": "Brand",
      "name": "Gifted Balloon"
    },
    "offers": {
      "@type": "Offer",
      "price": product.price.toFixed(2),
      "priceCurrency": "GBP",
      "availability": "https://schema.org/InStock",
      "seller": {
        "@type": "Organization",
        "name": "Gifted Balloon"
      }
    },
    "aggregateRating": {
      "@type": "AggregateRating",
      "ratingValue": "4.8",
      "reviewCount": "127"
    }
  })}></script>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .product-card {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  .product-card:hover {
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.15);
  }

  /* Ensure images show full content with padding */
  .product-card img {
    border-radius: 12px;
  }

  @media (max-width: 640px) {
    .product-card {
      margin: 0 1rem;
    }
  }
</style>